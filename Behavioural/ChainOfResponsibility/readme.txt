Цепочка обязанностей
Chain Of Responsibility

Цепочка обязанностей - поведенческий шаблон проектирования, предназначенный для разбиения поведения программы на цепочку действий. Каждое звено из цепочки состоит из объекта, который выполняет своё действие и передает управление следующему объекту до конца цепочки. В зависимости от цели, которую вы преследуете создавая цепочку обязанностей - это может быть как просто выполнение неких действий в определенной последовательности, так и организация полноценной или не очень транзакции.

Транзакция, своими словами - последовательность действий, характеризующаяся тем, что в каждое из действий в цепочке должно быть обязательно выполнено, и если хотя бы одно из действий звеньев цепи не было исполнено должным образом - все действие, которое производит цепочка - не выполняется, а так же каждое из изменений, произведенные отдельными звеньями - отменяется.

Рассмотрим шаблон на примере очень абстрактной транзакции записи блога в базу данных.

1. Начнем с объекта нашей записи BlogPost.

2. Создадим абстрактный класс нашей цепочки, потомки которого будут ее звеньями AbstractPreparedPost.

3. Создадим двух потомков абстрактного класса:
    - в одном из них SubmittedPost будет проверяться и выполняться некий код (скрытый от наших глаз) по подтверждению чего-то связанного с постом;
    - а на втором шаге DbReadyPost - проверка был ли текст нашей записи должным образом подготовлен для записи в базу, пост обработанный для базы.

4. Создадим 2 записи, одна из них и не подтверждена и не подготовлена для базы данных, о второй же позаботились - у нее все в порядке.

5. Создадим объект нашей цепочки и запустим нашу длинную и сложную последовательность сначала для первого, а затем и для второго поста.
