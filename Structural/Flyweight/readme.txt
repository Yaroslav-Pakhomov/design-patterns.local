Легковес
Flyweight

Легковес (a.k.a. Приспособленец) - структурный шаблон проектирования, который позволяет сократить использование памяти приложением путем хранения "общего" состояния объектов только один раз, вместо хранения этого состояния в каждом из создаваемых объектов.

Нужно отметить, что учитывая общую "легковесность" нашего любимого PHP, паттерн слабо применим для этого языка, тем не менее никто не мешает нам его реализовать! Простыми словами опишу его, так сказать структуру: допустим у нас есть группа однотипных объектов с несколькими свойствами, при этом часть свойств этих объектов может быть одинаковой у разных объектов, другая же - уникальная для каждого объекта по отдельности. Собственно, нам необходимо разделить объект на "общую" и на "уникальную" части, которые будут храниться в "базе данных" в двух массивах: один массив будет содержать уникальные объекты, второй - повторяющиеся.

Пример на машинах:

1. Начнем с "повторяющихся" свойств машин, для этого соорудим класс CarVariation, в котором определим повторяющиеся свойства автомобиля.

2. Продолжим с созданием класса конкретной машины CertainCar.

3. А теперь, в классе CarDataBase реализуем задумку шаблона, обратите внимание на описания.

4. Напишем клиент-код и проверим, действительно ли конкретные машины с одинаковыми вариациями будут ссылаться на один и тот же объект вариации.

-------------------------------

Ещё пример (папка "Tea"):

Вы когда-нибудь заказывали чай в кафе? Они зачастую делают больше одной чашки, приносят вам ваш чай, а остальное сохраняют для других клиентов. Структурные паттерны Flyweight как раз этим и занимаются, чем экономят память.

1. У нас есть чай KarakTea и тот, кто его готовит TeaMaker.

2. Также есть кафе, где принимаются и выполняются заказы TeaShop.

3. Используем написанный код.
