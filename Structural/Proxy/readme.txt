Заместитель
Proxy

Заместитель - структурный шаблон проектирования, позволяющий подменить в программу объект-заместитель существующего класса в тех случаях, когда помимо основной работы замещаемого объекта, необходимо сделать что-либо еще: до или после. Это может быть что угодно - логирование, обращение в базу или любое другое действие. Даже ничего. Бездействие - то же действие.

Давайте рассмотрим шаблон на примере туристического похода! Отправляясь в лес - вы однозначно столкнетесь с различными зарослями как деревьев, так и кустов. И непременно придется сквозь них пробираться. И каждому, кто попадал в заросли кустарника известно, что прорубать свой путь сквозь тонкую и частую иву топором - то еще занятие, это неудобно, для таких целей больше подойдет мачете! И наоборот - рубить мачете деревья конечно можно, но гораздо менее эффективно чем топором.

Давайте реализуем ситуацию понятным нам языком!

1. Создадим интерфейс IChopper и реализуем его в классах Axe и Machete.

---------------------------------
Давайте сделаем так, чтобы будущий турист совершал рубящую работу подходящим для этого инструментом.
---------------------------------

2. Создадим класс ChoppingProxy, так же реализующий интерфейс Chopper, но в методе chop() проверим, какой именно материал нам предстоит рубить, и в зависимости от него будем доставать из рюкзака топор или мачете. А если нас попросят порубить что-то кроме кустов или деревьев, сообщим окружающим об этом и сообщим, что не планируем портить инструмент!

3. Тестируем паттерн.
